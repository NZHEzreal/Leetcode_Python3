题意：
给定一个数组，其中第i个元素代表第i天的股票价格，要求只交易一次（一次购买，一次抛售）。然后求最大利润。


思路：
先设定两个变量，max_profit代表交易的最大利润，minbunin代表买入最低价格
每天要更新最低价格，默认最低价格就是第一天的价格price[0]
如果今天的价格比最低买入价格要低，那么就更新max_profit
如果有更大利润出现时，再次更新max_profit


代码：
class Solution:
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        days = len(prices)
        if days == 0:
            return 0
        max_profit = 0
        minbuyin = prices[0]
        for i in range(days):
            minbuyin = min(minbuyin, prices[i])
            if max_profit < (prices[i] - minbuyin):
                max_profit = prices[i] - minbuyin
        return max_profit
